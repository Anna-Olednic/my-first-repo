{
	"info": {
		"_postman_id": "5aea655b-7b96-440a-9a00-d64f587e8fcd",
		"name": "HW5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28421387"
	},
	"item": [
		{
			"name": "Get Lists",
			"item": [
				{
					"name": "Get Lists/Get Lists All IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData.lists)\r",
									"\r",
									"   jsonData.lists.forEach(item =>{\r",
									"    console.log(item.id)\r",
									"   }) "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{my_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.clickup.com/api/v2/folder/90156719898/list",
							"protocol": "https",
							"host": [
								"api",
								"clickup",
								"com"
							],
							"path": [
								"api",
								"v2",
								"folder",
								"90156719898",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create List",
			"item": [
				{
					"name": "Create List/ Create List Schema 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const Ajv = require('ajv');\r",
									"const ajv = new Ajv();\r",
									"\r",
									"var schema = {\r",
									"  type: \"object\",\r",
									"  properties: {\r",
									"    id: { type: \"string\" },\r",
									"    name: { type: \"string\" },\r",
									"    deleted: { type: \"boolean\" },\r",
									"    orderindex: { type: \"number\" },\r",
									"    content: { type: \"string\" },\r",
									"    priority: { type: [\"null\"] },\r",
									"    assignee: { type: [\"null\"] },\r",
									"    due_date: { type: [\"null\"] },\r",
									"    start_date: { type: [\"null\"] },\r",
									"    folder: {\r",
									"      type: \"object\",\r",
									"      properties: {\r",
									"        id: { type: \"string\" },\r",
									"        name: { type: \"string\" },\r",
									"        hidden: { type: \"boolean\" },\r",
									"        access: { type: \"boolean\" }\r",
									"      },\r",
									"      required: [\"id\", \"name\", \"hidden\", \"access\"]\r",
									"    },\r",
									"    space: {\r",
									"      type: \"object\",\r",
									"      properties: {\r",
									"        id: { type: \"string\" },\r",
									"        name: { type: \"string\" },\r",
									"        access: { type: \"boolean\" }\r",
									"      },\r",
									"      required: [\"id\", \"name\", \"access\"]\r",
									"    },\r",
									"    inbound_address: { type: \"string\" },\r",
									"    archived: { type: \"boolean\" },\r",
									"    override_statuses: { type: \"boolean\" },\r",
									"    statuses: {\r",
									"      type: \"array\",\r",
									"      items: {\r",
									"        type: \"object\",\r",
									"        properties: {\r",
									"          id: { type: \"string\" },\r",
									"          status: { type: \"string\" },\r",
									"          orderindex: { type: \"number\" },\r",
									"          color: { type: \"string\" },\r",
									"          type: { type: \"string\" },\r",
									"          status_group: { type: \"string\" }\r",
									"        },\r",
									"        required: [\"id\", \"status\", \"orderindex\", \"color\", \"type\", \"status_group\"]\r",
									"      }\r",
									"    },\r",
									"    permission_level: { type: \"string\" }\r",
									"  },\r",
									"  required: [\"id\", \"name\", \"deleted\", \"orderindex\", \"content\", \"priority\", \"assignee\", \"due_date\", \"start_date\", \"folder\", \"space\", \"inbound_address\", \"archived\", \"override_statuses\", \"statuses\", \"permission_level\"]\r",
									"};\r",
									"\r",
									"\r",
									"const validate = ajv.compile(schema);\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Schema is valid\", function () {\r",
									"    const valid = validate(response);\r",
									"    pm.expect(valid, JSON.stringify(validate.errors)).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{my_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"List New{{$randomFirstName}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.clickup.com/api/v2/folder/90156719898/list",
							"protocol": "https",
							"host": [
								"api",
								"clickup",
								"com"
							],
							"path": [
								"api",
								"v2",
								"folder",
								"90156719898",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create List/ Get Created List After Request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {\r",
									"    const response = await pm.sendRequest({\r",
									"        url: \"https://api.clickup.com/api/v2/list/901510753405\",\r",
									"        method: \"DELETE\",\r",
									"        header: {\r",
									"            \"Authorization\": pm.environment.get(\"my_token\")\r",
									"        }\r",
									"    });\r",
									"\r",
									"    console.log(response.json());\r",
									"} catch (err) {\r",
									"    console.error(err);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{my_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.clickup.com/api/v2/list/{{id}}",
							"protocol": "https",
							"host": [
								"api",
								"clickup",
								"com"
							],
							"path": [
								"api",
								"v2",
								"list",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create List/ Delete Created List Pre-Request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"try {\r",
									"    const response = await pm.sendRequest({\r",
									"        url: \"https://api.clickup.com/api/v2/folder/90156719898/list\",\r",
									"        method: \"POST\",\r",
									"        header: {\r",
									"            \"Authorization\": pm.environment.get(\"my_token\")\r",
									"        }\r",
									"    });\r",
									"\r",
									"    console.log(response.json());\r",
									"} catch (err) {\r",
									"    console.error(err);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{my_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.clickup.com/api/v2/list/{{id}}",
							"protocol": "https",
							"host": [
								"api",
								"clickup",
								"com"
							],
							"path": [
								"api",
								"v2",
								"list",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get List",
			"item": [
				{
					"name": "Get List/Get Created List Schema 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const Ajv = require('ajv');\r",
									"const ajv = new Ajv();\r",
									"\r",
									"var schema = {\r",
									"    type: \"object\",\r",
									"    properties: {\r",
									"            id: { type: \"string\" },\r",
									"        name: { type: \"string\" },\r",
									"        deleted: { type: \"boolean\" },\r",
									"        orderindex: { type: \"number\" },\r",
									"        priority: { type: [\"array\", \"null\"] },\r",
									"        start_date: { type: [\"string\", \"null\"] },\r",
									"        due_date: { type: [\"string\", \"null\"] },\r",
									"        assignee: { type: [\"array\", \"null\"] }\r",
									"    },\r",
									"    required: [\"id\", \"name\", \"deleted\", \"orderindex\", \"priority\", \"start_date\", \"due_date\", \"assignee\"]\r",
									"     \r",
									"\r",
									"};\r",
									"\r",
									"const validate = ajv.compile(schema);\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Schema is valid\", function () {\r",
									"    const valid = validate(response);\r",
									"    pm.expect(valid, JSON.stringify(validate.errors)).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{my_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.clickup.com/api/v2/list/{{id}}",
							"protocol": "https",
							"host": [
								"api",
								"clickup",
								"com"
							],
							"path": [
								"api",
								"v2",
								"list",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}